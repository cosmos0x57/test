import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.neural_network import MLPRegressor,MLPClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score
from time import time


# df1 = pd.read_excel('E:\\处理数据及问题\\安捷暖通-5m-总剔除.xlsx',sheet_name="Sheet1")
# df2 = df1.loc[:,['日期','新风9#温度','新风10#温度','新风11#温度','新风12#温度','新风13#温度','新风14#温度',
# '新风15#温度','新风16#温度','新风26#温度','新风27#温度','新风28#温度','二层新风温度反馈','新风A1_1送风风速',
# '新风A1_1预冷表冷器前风温度','新风A1_1预冷后-直膨前风温度','新风A1_1直膨表冷器后风温度','新风机组1_1总冷量',
# '新风机组1_1预冷表冷器显冷','新风机组1_1深冷表冷器显冷','新风机组1_1总显冷','新风机组1_1总潜冷',
# '新风机组1_1回风焓值焓','新风机组1_1出风焓值','新风机组1_1瞬时风量','冷源机组送风温度1','冷源机组送风湿度1',
# '冷源机组新风温度1','冷源机组新风湿度1','冷源机组系统运行状态0正常停机1','冷源机组送风压力1','冷源机组回风温度1',
# '冷源机组CO2浓度1','冷源机组冷热水阀开度1','冷源机组压机投入开度1','冷源机组制热阀投入开度1','新风A1_2送风风速',
# '新风A1_2预冷表冷器前风温度','新风机组1_2总冷量','新风机组1_2预冷表冷器显冷','新风机组1_2深冷表冷器显冷','新风机组1_2总显冷','新风机组1_2总潜冷',
# '新风机组1_2回风焓值焓','新风机组1_2出风焓值','新风机组1_2瞬时风量','冷源机组送风温度2','冷源机组送风湿度2',
# '冷源机组新风温度2','冷源机组新风湿度2','冷源机组系统运行状态0正常停机2','冷源机组送风压力2','冷源机组回风温度2',
# '冷源机组CO2浓度2','冷源机组冷热水阀开度2','冷源机组制热阀投入开度2','新风A2_1送风风速',
# '新风A2_1预冷表冷器前风温度','新风机组2_1总冷量',
# '新风机组2_1预冷表冷器显冷','新风机组2_1深冷表冷器显冷','新风机组2_1总显冷','新风机组2_1总潜冷',
# '新风机组2_1回风焓值焓','新风机组2_1出风焓值','新风机组2_1瞬时风量','冷源机组送风温度3','冷源机组送风湿度3',
# '冷源机组新风温度3','冷源机组新风湿度3','冷源机组系统运行状态0正常停机3','冷源机组送风压力3','冷源机组回风温度3',
# '冷源机组CO2浓度3','冷源机组冷热水阀开度3','冷源机组制热阀投入开度3','新风机组供水温度','机组回水温度控制反馈',
# '新风机组供水压力','新风机组回水温度','新风机组回水压力','1#太阳能直供水泵频率反馈','2#太阳能直供水泵频率反馈',
# '蓄能槽内1号温度','蓄能槽内2号温度','蓄能槽内3号温度','蓄能槽内4号温度','蓄能槽内5号温度','蓄能槽内6号温度',
# '地源热泵回水压力','地缘热泵回水温度','地源热泵供水压力','地缘热泵供水温度','地源热泵地埋管回水压力','地缘热泵地埋管回水温度',
# '地源热泵地埋管供水压力','地缘热泵地埋管供水温度','地源侧供回水压差','A、B机组地源水泵前后压差','地源热泵A主机用户侧供水温度',
# '地源热泵A主机用户侧供水压力','地源热泵A主机用户侧回水温度','地源热泵A主机用户侧回水压力','地源热泵A主机地源侧供水压力',
# '地源热泵A主机地源侧供水温度','地源热泵A主机地源侧回水温度','地源热泵A主机地源侧回水压力','A组地源热泵冷却出水温度',
# 'A组地源热泵冷却回水温度','A组地源热泵环境温度','A组地源热泵机组状态','A组地源热泵负荷输出','A组地源热泵负荷需求',
# 'A组地源热泵回水温度','A组地源热泵出水温度',
# '地源热泵B主机用户侧供水压力','地源热泵B主机用户侧回水温度','地源热泵B主机用户侧回水压力','地源热泵B主机地源侧供水压力',
# '地源热泵B主机地源侧供水温度','地源热泵B主机地源侧回水温度','地源热泵B主机地源侧回水压力','B组地源热泵冷却出水温度',
# 'B组地源热泵冷却回水温度','B组地源热泵环境温度','B组地源热泵机组状态','B组地源热泵负荷输出','B组地源热泵负荷需求',
# 'B组地源热泵回水温度','B组地源热泵出水温度','调节管供回水压差','主管供水温度测试1','主管供回水压差测试1昆仑','主管供水温度测试2',
# '主管供回水压差测试2','主管整流器前后压差','能源机房3冷却水泵前后压差','1#板换供水温度','1#板换供水压力','1#板换回水温度','1#板换回水压力',
# '2#板换供水温度','2#板换回水温度','3#板换供水温度','3#板换供水压力','3#板换回水温度','3#板换回水压力',
# '分水器新风机组供水温度','分水器新风机组供水压力','分水器地板辐射供水温度','回水器新风机组回水温度','回水器新风机组回水压力','回水器地板辐射回水温度',
# '地板辐射供水温度','地板辐射供水压力','地板辐射回水温度','地板辐射回水压力','太阳能进口油温','太阳能出口油温','气象站环温','气象站环湿',
# '气象站总辐射1']]
# df2.to_excel('E:\\处理数据及问题\\安捷暖通-5m-模型训练.xlsx', sheet_name='Sheet1')


start_time = time()
data = pd.read_excel('E:\\处理数据及问题\\安捷暖通-5m-模型训练-1.xlsx',sheet_name='Sheet1')
array = data.values
X = array[:, 0:161]
Y = array[:, 161]
validation_size = 0.1
seed = 8
X_train, X_validation, Y_train, Y_validation = train_test_split(X, Y,test_size=validation_size, random_state=seed)
knn = MLPRegressor()
knn.fit(X_train,Y_train)
K_pred = knn.predict(X_validation)
score = r2_score(Y_validation, K_pred)
end_time = time()  
print(end_time-start_time)
#需要用测试数据检验这个模型好不好
# sklearn.metric提供了一些函数，用来计算真实值与预测值之间的预测误差：
# 以_score结尾的函数，返回一个最大值，越高越好

plt.plot(np.arange(len(K_pred)),Y_validation,'g-',label = 'true value')
plt.plot(np.arange(len(K_pred)),K_pred,'r-',label = 'predict value')
print(score)

plt.legend()
plt.savefig("E:\\处理数据及问题\\作图\\神经网络.png")
plt.show()
